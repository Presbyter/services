// Code generated by truss. DO NOT EDIT.
// Rerunning truss will overwrite this file.
// Version: fcd9ff140d
// Version Date: 2021-07-14T06:36:40Z

package svc

// This file provides server-side bindings for the gRPC transport.
// It utilizes the transport/grpc.Server.

import (
	"context"
	"net/http"

	"google.golang.org/grpc/metadata"

	grpctransport "github.com/go-kit/kit/transport/grpc"

	// This Service
	pb "github.com/Presbyter/services/protobuf"
)

// MakeGRPCServer makes a set of endpoints available as a gRPC ImServer.
func MakeGRPCServer(endpoints Endpoints, options ...grpctransport.ServerOption) pb.ImServer {
	serverOptions := []grpctransport.ServerOption{
		grpctransport.ServerBefore(metadataToContext),
	}
	serverOptions = append(serverOptions, options...)
	return &grpcServer{
		// im

		createaccount: grpctransport.NewServer(
			endpoints.CreateAccountEndpoint,
			DecodeGRPCCreateAccountRequest,
			EncodeGRPCCreateAccountResponse,
			serverOptions...,
		),
		addgroup: grpctransport.NewServer(
			endpoints.AddGroupEndpoint,
			DecodeGRPCAddGroupRequest,
			EncodeGRPCAddGroupResponse,
			serverOptions...,
		),
		deletegroup: grpctransport.NewServer(
			endpoints.DeleteGroupEndpoint,
			DecodeGRPCDeleteGroupRequest,
			EncodeGRPCDeleteGroupResponse,
			serverOptions...,
		),
		addfriend: grpctransport.NewServer(
			endpoints.AddFriendEndpoint,
			DecodeGRPCAddFriendRequest,
			EncodeGRPCAddFriendResponse,
			serverOptions...,
		),
		deletefriend: grpctransport.NewServer(
			endpoints.DeleteFriendEndpoint,
			DecodeGRPCDeleteFriendRequest,
			EncodeGRPCDeleteFriendResponse,
			serverOptions...,
		),
	}
}

// grpcServer implements the ImServer interface
type grpcServer struct {
	createaccount grpctransport.Handler
	addgroup      grpctransport.Handler
	deletegroup   grpctransport.Handler
	addfriend     grpctransport.Handler
	deletefriend  grpctransport.Handler
}

// Methods for grpcServer to implement ImServer interface

func (s *grpcServer) CreateAccount(ctx context.Context, req *pb.CreateAccountReq) (*pb.CreateAccountResp, error) {
	_, rep, err := s.createaccount.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.CreateAccountResp), nil
}

func (s *grpcServer) AddGroup(ctx context.Context, req *pb.AddGroupReq) (*pb.AddGroupResp, error) {
	_, rep, err := s.addgroup.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.AddGroupResp), nil
}

func (s *grpcServer) DeleteGroup(ctx context.Context, req *pb.DeleteGroupReq) (*pb.Empty, error) {
	_, rep, err := s.deletegroup.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.Empty), nil
}

func (s *grpcServer) AddFriend(ctx context.Context, req *pb.AddFriendReq) (*pb.Empty, error) {
	_, rep, err := s.addfriend.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.Empty), nil
}

func (s *grpcServer) DeleteFriend(ctx context.Context, req *pb.DeleteFriendReq) (*pb.Empty, error) {
	_, rep, err := s.deletefriend.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.Empty), nil
}

// Server Decode

// DecodeGRPCCreateAccountRequest is a transport/grpc.DecodeRequestFunc that converts a
// gRPC createaccount request to a user-domain createaccount request. Primarily useful in a server.
func DecodeGRPCCreateAccountRequest(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.CreateAccountReq)
	return req, nil
}

// DecodeGRPCAddGroupRequest is a transport/grpc.DecodeRequestFunc that converts a
// gRPC addgroup request to a user-domain addgroup request. Primarily useful in a server.
func DecodeGRPCAddGroupRequest(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.AddGroupReq)
	return req, nil
}

// DecodeGRPCDeleteGroupRequest is a transport/grpc.DecodeRequestFunc that converts a
// gRPC deletegroup request to a user-domain deletegroup request. Primarily useful in a server.
func DecodeGRPCDeleteGroupRequest(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.DeleteGroupReq)
	return req, nil
}

// DecodeGRPCAddFriendRequest is a transport/grpc.DecodeRequestFunc that converts a
// gRPC addfriend request to a user-domain addfriend request. Primarily useful in a server.
func DecodeGRPCAddFriendRequest(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.AddFriendReq)
	return req, nil
}

// DecodeGRPCDeleteFriendRequest is a transport/grpc.DecodeRequestFunc that converts a
// gRPC deletefriend request to a user-domain deletefriend request. Primarily useful in a server.
func DecodeGRPCDeleteFriendRequest(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.DeleteFriendReq)
	return req, nil
}

// Server Encode

// EncodeGRPCCreateAccountResponse is a transport/grpc.EncodeResponseFunc that converts a
// user-domain createaccount response to a gRPC createaccount reply. Primarily useful in a server.
func EncodeGRPCCreateAccountResponse(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.CreateAccountResp)
	return resp, nil
}

// EncodeGRPCAddGroupResponse is a transport/grpc.EncodeResponseFunc that converts a
// user-domain addgroup response to a gRPC addgroup reply. Primarily useful in a server.
func EncodeGRPCAddGroupResponse(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.AddGroupResp)
	return resp, nil
}

// EncodeGRPCDeleteGroupResponse is a transport/grpc.EncodeResponseFunc that converts a
// user-domain deletegroup response to a gRPC deletegroup reply. Primarily useful in a server.
func EncodeGRPCDeleteGroupResponse(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.Empty)
	return resp, nil
}

// EncodeGRPCAddFriendResponse is a transport/grpc.EncodeResponseFunc that converts a
// user-domain addfriend response to a gRPC addfriend reply. Primarily useful in a server.
func EncodeGRPCAddFriendResponse(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.Empty)
	return resp, nil
}

// EncodeGRPCDeleteFriendResponse is a transport/grpc.EncodeResponseFunc that converts a
// user-domain deletefriend response to a gRPC deletefriend reply. Primarily useful in a server.
func EncodeGRPCDeleteFriendResponse(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.Empty)
	return resp, nil
}

// Helpers

func metadataToContext(ctx context.Context, md metadata.MD) context.Context {
	for k, v := range md {
		if v != nil {
			// The key is added both in metadata format (k) which is all lower
			// and the http.CanonicalHeaderKey of the key so that it can be
			// accessed in either format
			ctx = context.WithValue(ctx, k, v[0])
			ctx = context.WithValue(ctx, http.CanonicalHeaderKey(k), v[0])
		}
	}

	return ctx
}
